#!/usr/bin/env python3

from sys import exit

import gi
gi.require_version('ALSACtl', '0.0')
from gi.repository import ALSACtl

from helper import test_enums

elem_types = (
    'NONE',
    'BOOLEAN',
    'INTEGER',
    'ENUMERATED',
    'BYTES',
    'IEC60958',
    'INTEGER64',
)

elem_iface_types = (
    'CARD',
    'HWDEP',
    'MIXER',
    'PCM',
    'RAWMIDI',
    'TIMER',
    'SEQUENCER',
)

elem_access_flags = (
    'READ',
    'WRITE',
    'VOLATILE',
    'TLV_READ',
    'TLV_WRITE',
    'TLV_COMMAND',
    'INACTIVE',
    'LOCK',
    'OWNER',
    'TLV_CALLBACK',
    'USER',
)

event_types = (
    'ELEM',
)

elem_event_mask_flags = (
    'VALUE',
    'INFO',
    'ADD',
    'TLV',
    'REMOVE',
)

card_error_types = (
    'FAILED',
    'DISCONNECTED',
    'ELEM_NOT_FOUND',
    'ELEM_NOT_SUPPORTED',
    'ELEM_OWNED',
    'ELEM_EXIST',
)

types = {
    ALSACtl.ElemType:       elem_types,
    ALSACtl.ElemIfaceType:  elem_iface_types,
    ALSACtl.ElemAccessFlag: elem_access_flags,
    ALSACtl.ElemAccessFlag: elem_access_flags,
    ALSACtl.EventType:      event_types,
    ALSACtl.ElemEventMask:  elem_event_mask_flags,
    ALSACtl.CardError:      card_error_types,
}

for target_type, enumerations in types.items():
    if not test_enums(target_type, enumerations):
        exit(1)
